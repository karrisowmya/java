//USING KADANE'S ALGORITHM
/*
Given an array arr[] of size N. The task is to find the sum of the contiguous subarray within a arr[] with the largest sum. 

Example:

Input: arr = {-2,-3,4,-1,-2,1,5,-3}
Output: 7
Explanation: The subarray {4,-1, -2, 1, 5} has the largest sum 7.

*/



import java.util.*;
import java.io.*;
public class subarraysum {

    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt();
        int a[] = new int[n];
        for(int i=0;i<n;i++){
            a[i] = sc.nextInt();
        }
        int max = Integer.MIN_VALUE,sum=0;
        for(int i=0;i<n;i++){
            sum = sum+a[i];
            if(max<sum){
                max = sum;
            }
            if(sum<0){
                sum=0;
            }
        }
        System.out.println(max);
    }
}
